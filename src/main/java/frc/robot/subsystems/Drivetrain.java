// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


//import frc.robot.commands.*;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
// import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

import com.kauailabs.navx.frc.AHRS;
import edu.wpi.first.wpilibj.SPI;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
// import edu.wpi.first.wpilibj.motorcontrol.MotorController;
// import edu.wpi.first.wpilibj.motorcontrol.PWMVictorSPX;

// import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;



public class Drivetrain extends SubsystemBase {


    //private final PWMVictorSPX LF_motor = new PWMVictorSPX(2);
    //private final PWMVictorSPX LB_motor = new PWMVictorSPX(3);
    //private final PWMVictorSPX RB_motor = new PWMVictorSPX(1);
    //private final PWMVictorSPX RF_motor = new PWMVictorSPX(0);



    private final WPI_VictorSPX LB_motor = new WPI_VictorSPX(3);
    private final WPI_VictorSPX LF_motor = new WPI_VictorSPX(2);
    private final WPI_VictorSPX RB_motor = new WPI_VictorSPX(1);
    private final WPI_VictorSPX RF_motor = new WPI_VictorSPX(0);
    public final DifferentialDrive m_robotDrive = new DifferentialDrive(LF_motor, RF_motor);

    public static AHRS ahrs;
    private static double currentAngle = 0;
    private static double targetAngle = 0;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {

        LF_motor.setInverted(false);

        RF_motor.setInverted(false);

        LB_motor.follow(LF_motor);
        RB_motor.follow(RF_motor);

        ahrs = new AHRS(SPI.Port.kMXP);




        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run
        currentAngle = ahrs.getAngle();
        SmartDashboard.putNumber("Angle", currentAngle);

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }



    public void setMotors(double leftSpeed, double rightSpeed){
         LF_motor.set(leftSpeed);
         RF_motor.set(-rightSpeed);
        //m_robotDrive.arcadeDrive(leftSpeed, rightSpeed);
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.


}

